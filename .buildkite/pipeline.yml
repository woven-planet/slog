---
docker: &docker
  docker#v3.0.1:
    user: buildkite
    always-pull: true
    image: library.pdx.l5.woven-planet.tech/ci/ci-python38-bionic:stable
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/buildkite-agent/.ssh/:/home/buildkite/.ssh/
    environment:
      - BUILDKITE_BRANCH
      - BUILDKITE_BUILD_NUMBER
      - BUILDKITE_PIPELINE_SLUG
      - BUILDKITE_ORGANIZATION_SLUG
      - BUILDKITE_VAULTBUILDKITEPLUGIN_INFRA_NEXUS_BUILDKITE_USERNAME
      - BUILDKITE_VAULTBUILDKITEPLUGIN_INFRA_NEXUS_BUILDKITE_PASSWORD
      - BUILDKITE_VAULTBUILDKITEPLUGIN_INFRA_GITHUB_LYFT_AUTONOMOUS_CI_PASSWORD

vault: &vault
  ssh://github.com-vbkp/lyft/vaultbuildkiteplugin#v0.1.0:
    domain: vault.pdx.l5.woven-planet.tech
    secrets:
      - infra/nexus/buildkite=username
      - infra/nexus/buildkite=password
      - infra/github/lyft-autonomous-ci=password

retries: &retries
  automatic:
    - exit_status: 128
      limit: 3

steps:
  - label: ":hammer: AUTOSAR compliance check (errors)"
    timeout: 5
    agents:
      queue: cpu-large
    # TODO(vsbus): add steps for `warning` and all (i.e. empty args)
    command: scripts/arene_autosar_check.sh error
    soft_fail:
      - exit_status: 1
    retry:
      <<: *retries
    plugins:
      <<: *vault
      <<: *docker

  - label: ":hammer: AUTOSAR compliance check (warnings)"
    timeout: 5
    agents:
      queue: cpu-large
    command: scripts/arene_autosar_check.sh warning
    # TODO(vsbus): address warnings and remove soft-fail
    soft_fail:
      - exit_status: 1
    retry:
      <<: *retries
    plugins:
      <<: *vault
      <<: *docker

  - label: ":hammer: AUTOSAR compliance check (all)"
    timeout: 5
    agents:
      queue: cpu-large
    command: scripts/arene_autosar_check.sh
    soft_fail:
      - exit_status: 1
    retry:
      <<: *retries
    plugins:
      <<: *vault
      <<: *docker

  - label: ":hammer: Lint"
    timeout: 5
    agents:
      queue: cpu-small
    command: scripts/install_linters.sh && scripts/lint.sh ./
    retry:
      <<: *retries
    plugins:
      <<: *vault
      <<: *docker

  - label: ":hammer: Unit Tests"
    timeout: 5
    agents:
      queue: cpu-small
    commands:
      - "scripts/setup_dev_env.sh"
      - "bazelisk test --test_output=errors //..."
      - "bazelisk build //..."
    retry:
      <<: *retries
    plugins:
      <<: *vault
      <<: *docker

  - label: ":ship: Package slog repo zip"
    timeout: 5
    agents:
      queue: cpu-small
    commands:
      - "sudo apt update"
      - "sudo apt install zip g++-8 -y"
      - "sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 700 --slave /usr/bin/g++ g++ /usr/bin/g++-7"
      - "sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8"
      - "pkg_slog_repo_zip/zip_and_upload_to_artifactory.sh $(cat VERSION).${BUILDKITE_BUILD_NUMBER}"
    retry:
      <<: *retries
    plugins:
      <<: *vault
      <<: *docker

  - label: ":ship: Package slog-py wheel"
    timeout: 5
    agents:
      queue: cpu-small
    commands:
      - "scripts/setup_dev_env.sh"
      - "sudo apt update"
      - "sudo apt install twine g++-8 -y"
      - "sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 700 --slave /usr/bin/g++ g++ /usr/bin/g++-7"
      - "sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8"
      - "cd pkg_slog_py_wheel"
      - "./prepare_build.sh $(cat ../VERSION).${BUILDKITE_BUILD_NUMBER}"
      - "./pypi_nexus_login.sh"
      - "cd .."
      - "bazelisk build //pkg_slog_py_wheel:slog_py"
    retry:
      <<: *retries
    plugins:
      <<: *vault
      <<: *docker

  - wait

  - label: ":rocket: System Test: Import slog_cc via bazel"
    timeout: 5
    agents:
      queue: cpu-small
    commands:
      - "scripts/setup_dev_env.sh"
      - "cd test_import/example_project_cc_via_bazel/"
      - "./prepare_workspace.sh $(cat ../../VERSION).${BUILDKITE_BUILD_NUMBER}"
      - "bazelisk test --test_output=errors src:slog_cc_test"
    retry:
      <<: *retries
    plugins:
      <<: *vault
      <<: *docker

  - label: ":rocket: System Test: Import slog_py via bazel"
    timeout: 5
    agents:
      queue: cpu-small
    commands:
      - "scripts/setup_dev_env.sh"
      - "cd test_import/example_project_py_via_bazel/"
      - "./prepare_workspace.sh $(cat ../../VERSION).${BUILDKITE_BUILD_NUMBER}"
      - "bazelisk test --test_output=errors src:slog_py_test"
    retry:
      <<: *retries
    plugins:
      <<: *vault
      <<: *docker

  - label: ":rocket: System Test: Import slog_py via pip"
    timeout: 5
    agents:
      queue: cpu-small
    commands:
      - "cd test_import/example_project_py_via_pip/"
      - "scripts/setup_env.sh $(cat ../../VERSION).${BUILDKITE_BUILD_NUMBER}"
      - "python src/slog_test.py"
    retry:
      <<: *retries
    plugins:
      <<: *vault
      <<: *docker
